try:
    import sys, os
    import pandas as pd, numpy as np, datetime
    from PyQt5.QtWidgets import *
    from PyQt5.QtCore import Qt, QSize
    from PyQt5.QtGui import QIcon, QCursor, QPixmap
    import qtawesome, sip
    import pandas_profiling
    from datacap import get_data #实时数据
    from impinfo import * #焦点信息
    from popularity import * #热门课程
    from getrepo import * #课程报告
    from forecast import course_forecasting #课程预测
    from trend import *#变化趋势
    from distribution import * #课程分布
except Exception as e:
    print(e)

def get_pastdata(days):
    global data
    try:
        while days < 365:
            try:
                oneday = datetime.timedelta(days=days)
                today = datetime.date.today()
                day = (today - oneday).strftime('%Y_%m_%d')
                file_cat = './data/' + day + '.csv'
                data = pd.read_csv(file_cat)
                data_category = pd.read_csv('./category/categorydata.csv')
                data = np.array(data)[:, 1:]
                cate = np.array(data_category)[:, 1:]
                days = 365
            except:
                days += 1

    except:
        try:
            file_cat = './data/2020_02_17.csv'
            data = pd.read_csv(file_cat)
            data_category = pd.read_csv('./category/categorydata.csv')
            data = np.array(data)[:, 1:]
            cate = np.array(data_category)[:, 1:]
        except:
            data, cate = get_data()
    return (data, cate)

class MainUi(QMainWindow):

    def __init__(self):
        super().__init__()
        self.data, self.cate = get_pastdata(0)
        self.init_ui()

    def init_ui(self):
        self.setFixedSize(960, 730)
        self.setWindowTitle('网易云课堂数据分析助手')
        self.setWindowFlags(Qt.FramelessWindowHint)
        self.setStyleSheet("#MainWindow{border-image:url(./images/back1.jpg);}")
        self.main_widget =  QWidget()
        self.main_layout = QGridLayout()
        self.main_widget.setLayout(self.main_layout)
        self.left_widget = QWidget()
        self.left_widget.setObjectName('left_widget')
        self.left_layout = QGridLayout()
        self.left_widget.setLayout(self.left_layout)
        self.main_layout.addWidget(self.left_widget, 0, 0, 14, 1)
        self.setCentralWidget(self.main_widget)
        self.left_close = QPushButton(qtawesome.icon('fa.close', color='white'),'')
        self.left_close.clicked.connect(lambda : self.close())
        self.left_visit = QPushButton(qtawesome.icon('fa.window-maximize', color='white'),'')
        self.left_visit.clicked.connect(lambda : self.visit())
        self.left_mini = QPushButton(qtawesome.icon('fa.window-minimize', color='white'),'')
        self.left_mini.clicked.connect(lambda : self.showMinimized())
        self.left_label_0 = QPushButton('数据获取')
        self.left_label_0.setObjectName('left_label')
        self.left_label_1 = QPushButton('课程分析')
        self.left_label_1.setObjectName('left_label')
        self.left_label_2 = QPushButton('教师开课')
        self.left_label_2.setObjectName('left_label')
        self.left_label_3 = QPushButton('联系与帮助')
        self.left_label_3.setObjectName('left_label')
        self.left_button_0 = QPushButton(qtawesome.icon('fa.download', color='white'), '实时数据')
        self.left_button_0.clicked.connect(lambda : self.download())
        self.left_button_0.setObjectName('left_button')
        self.left_button_1 = QPushButton(qtawesome.icon('fa.fire', color='white'), '焦点信息')
        self.left_button_1.clicked.connect(lambda : self.important_information())
        self.left_button_1.setObjectName('left_button')
        self.left_button_2 = QPushButton(qtawesome.icon('fa.thermometer-full', color='white'), '热门课程')
        self.left_button_2.clicked.connect(lambda : self.popular_courses())
        self.left_button_2.setObjectName('left_button')
        self.left_button_3 = QPushButton(qtawesome.icon('fa.book', color='white'), '课程报告')
        self.left_button_3.clicked.connect(lambda : self.report())
        self.left_button_3.setObjectName('left_button')
        self.left_button_4 = QPushButton(qtawesome.icon('fa.magic', color='white'), '课程预测')
        self.left_button_4.clicked.connect(lambda : self.predict())
        self.left_button_4.setObjectName('left_button')
        self.left_button_5 = QPushButton(qtawesome.icon('fa.line-chart', color='white'), '变化趋势')
        self.left_button_5.clicked.connect(lambda : self.change_trend())
        self.left_button_5.setObjectName('left_button')
        self.left_button_6 = QPushButton(qtawesome.icon('fa.pie-chart', color='white'), '课程分布')
        self.left_button_6.clicked.connect(lambda : self.distribution_of_courses())
        self.left_button_6.setObjectName('left_button')
        self.left_button_7 = QPushButton(qtawesome.icon('fa.comment', color='white'), '反馈建议')
        self.left_button_7.clicked.connect(lambda : self.feedback())
        self.left_button_7.setObjectName('left_button')
        self.left_button_8 = QPushButton(qtawesome.icon('fa.star', color='white'), '关注我们')
        self.left_button_8.clicked.connect(lambda : self.join_us())
        self.left_button_8.setObjectName('left_button')
        self.left_button_9 = QPushButton(qtawesome.icon('fa.question', color='white'), '遇到问题')
        self.left_button_9.clicked.connect(lambda : self.face_problem())
        self.left_button_9.setObjectName('left_button')
        self.left_layout.addWidget(self.left_mini, 0, 0, 1, 1)
        self.left_layout.addWidget(self.left_close, 0, 2, 1, 1)
        self.left_layout.addWidget(self.left_visit, 0, 1, 1, 1)
        self.left_layout.addWidget(self.left_label_0, 1, 0, 1, 3)
        self.left_layout.addWidget(self.left_button_0, 2, 0, 1, 3)
        self.left_layout.addWidget(self.left_label_1, 3, 0, 1, 3)
        self.left_layout.addWidget(self.left_button_1, 4, 0, 1, 3)
        self.left_layout.addWidget(self.left_button_2, 5, 0, 1, 3)
        self.left_layout.addWidget(self.left_button_3, 6, 0, 1, 3)
        self.left_layout.addWidget(self.left_label_2, 7, 0, 1, 3)
        self.left_layout.addWidget(self.left_button_4, 8, 0, 1, 3)
        self.left_layout.addWidget(self.left_button_5, 9, 0, 1, 3)
        self.left_layout.addWidget(self.left_button_6, 10, 0, 1, 3)
        self.left_layout.addWidget(self.left_label_3, 11, 0, 1, 3)
        self.left_layout.addWidget(self.left_button_7, 12, 0, 1, 3)
        self.left_layout.addWidget(self.left_button_8, 13, 0, 1, 3)
        self.left_layout.addWidget(self.left_button_9, 14, 0, 1, 3)
        self.left_close.setFixedSize(28, 28)
        self.left_visit.setFixedSize(28, 28)
        self.left_mini.setFixedSize(28, 28)
        self.left_close.setStyleSheet('QPushButton{background:#F76677;border-radius:5px;}QPushButton:hover{background:red;}')
        self.left_visit.setStyleSheet('QPushButton{background:#F7D674;border-radius:5px;}QPushButton:hover{background:yellow;}')
        self.left_mini.setStyleSheet('QPushButton{background:#6DDF6D;border-radius:5px;}QPushButton:hover{background:green;}')
        self.left_widget.setStyleSheet('''
            QWidget#left_widget{color:#232C51;background:white;border-top:1px solid darkGray;border-bottom:1px solid darkGray;border-left:1px solid darkGray;border-top-left-radius:10px;border-bottom-left-radius:10px;}
            QLabel#left_lable{border:none;font-size:16px;font-weight:700;font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;}
            QPushButton#left_label{border:none;border-bottom:1px solid white;font-size:18px;font-weight:700;font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;}
            QPushButton#left_button:hover{border-left:4px solid red;font-weight:700;}''')
        self.setWindowOpacity(0.9)
        self.setAttribute(Qt.WA_TranslucentBackground)
        self.main_layout.setSpacing(0)
        self.important_information()
        self.setWindowState(Qt.WindowActive)
        self.steps = 0
        self.m_flag = False

    def ui(self):
        try:
            sip.delete(self.right_widget)
        except:
            pass
        self.right_widget = QWidget()
        self.right_widget.setObjectName('right_widget')
        self.right_layout = QGridLayout()
        self.right_widget.setLayout(self.right_layout)
        self.main_layout.addWidget(self.right_widget, 0, 1, 14, 10)
        self.setCentralWidget(self.main_widget)
        self.right_widget.setStyleSheet('''
            QWidget#right_widget{color:#232C51;background:white;border-top:1px solid darkGray;border-bottom:1px solid darkGray;border-right:1px solid darkGray;border-top-right-radius:10px;border-bottom-right-radius:10px;}
            QLabel#right_lable{border:none;font-size:16px;font-weight:700;font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;}''')

    def download(self):
        self.data, self.cate = get_data()        

    def important_information(self):
        self.ui()
        self.right_recommend_label = QLabel('课程名称关键词')
        self.right_recommend_label.setObjectName('right_lable')
        self.right_recommend_widget = QWidget()
        self.right_recommend_layout = QGridLayout()
        self.right_recommend_widget.setLayout(self.right_recommend_layout)
        self.recommend_button_1 = QToolButton()
        self.recommend_button_1.setText('AI/数据科学')
        self.recommend_button_1.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(1)), 1, 0))
        self.recommend_button_1.setIcon(QIcon('./picture/数据科学1.jpg'))
        self.recommend_button_1.setIconSize(QSize(100, 100))
        self.recommend_button_1.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_2 = QToolButton()
        self.recommend_button_2.setText('产品与运营')
        self.recommend_button_2.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(2)), 1, 0))
        self.recommend_button_2.setIcon(QIcon('./picture/产品与运营1.jpg'))
        self.recommend_button_2.setIconSize(QSize(100, 100))
        self.recommend_button_2.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_3 = QToolButton()
        self.recommend_button_3.setText('生活兴趣')
        self.recommend_button_3.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(3)), 1, 0))
        self.recommend_button_3.setIcon(QIcon('./picture/生活兴趣1.jpg'))
        self.recommend_button_3.setIconSize(QSize(100, 100))
        self.recommend_button_3.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_4 = QToolButton()
        self.recommend_button_4.setText('电商运营')
        self.recommend_button_4.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(4)), 1, 0))
        self.recommend_button_4.setIcon(QIcon('./picture/电商运营1.jpg'))
        self.recommend_button_4.setIconSize(QSize(100, 100))
        self.recommend_button_4.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_5 = QToolButton()
        self.recommend_button_5.setText('编程与开发')
        self.recommend_button_5.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(5)), 1, 0))
        self.recommend_button_5.setIcon(QIcon('./picture/编程与开发1.jpg'))
        self.recommend_button_5.setIconSize(QSize(100, 100))
        self.recommend_button_5.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_6 = QToolButton()
        self.recommend_button_6.setText('职业考试')
        self.recommend_button_6.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(6)), 1, 0))
        self.recommend_button_6.setIcon(QIcon('./picture/职业考试1.jpg'))
        self.recommend_button_6.setIconSize(QSize(100, 100))
        self.recommend_button_6.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_7 = QToolButton()
        self.recommend_button_7.setText('职场提升')
        self.recommend_button_7.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(7)), 1, 0))
        self.recommend_button_7.setIcon(QIcon('./picture/职场提升1.jpg'))
        self.recommend_button_7.setIconSize(QSize(100, 100))
        self.recommend_button_7.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_8 = QToolButton()
        self.recommend_button_8.setText('设计创意')
        self.recommend_button_8.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(8)), 1, 0))
        self.recommend_button_8.setIcon(QIcon('./picture/设计创意1.jpg'))
        self.recommend_button_8.setIconSize(QSize(100, 100))
        self.recommend_button_8.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_9 = QToolButton()
        self.recommend_button_9.setText('语言学习')
        self.recommend_button_9.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(9)), 1, 0))
        self.recommend_button_9.setIcon(QIcon('./picture/语言学习1.jpg'))
        self.recommend_button_9.setIconSize(QSize(100, 100))
        self.recommend_button_9.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_10 = QToolButton()
        self.recommend_button_10.setText('所有课程')
        self.recommend_button_10.clicked.connect(lambda : cloud(self.data, 1, 0))
        self.recommend_button_10.setIcon(QIcon('./picture/所有课程1.jpg'))
        self.recommend_button_10.setIconSize(QSize(100, 100))
        self.recommend_button_10.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.right_recommend_layout.addWidget(self.recommend_button_1, 0, 0)
        self.right_recommend_layout.addWidget(self.recommend_button_2, 0, 1)
        self.right_recommend_layout.addWidget(self.recommend_button_3, 0, 2)
        self.right_recommend_layout.addWidget(self.recommend_button_4, 0, 3)
        self.right_recommend_layout.addWidget(self.recommend_button_5, 0, 4)
        self.right_recommend_layout.addWidget(self.recommend_button_6, 1, 0)
        self.right_recommend_layout.addWidget(self.recommend_button_7, 1, 1)
        self.right_recommend_layout.addWidget(self.recommend_button_8, 1, 2)
        self.right_recommend_layout.addWidget(self.recommend_button_9, 1, 3)
        self.right_recommend_layout.addWidget(self.recommend_button_10, 1, 4)
        self.right_layout.addWidget(self.right_recommend_label, 1, 0, 1, 9)
        self.right_layout.addWidget(self.right_recommend_widget, 2, 0, 2, 9)
        self.right_recommend_label1 = QLabel('课程描述关键词')
        self.right_recommend_label1.setObjectName('right_lable')
        self.right_recommend_widget1 = QWidget()
        self.right_recommend_layout1 = QGridLayout()
        self.right_recommend_widget1.setLayout(self.right_recommend_layout1)
        self.recommend_button_11 = QToolButton()
        self.recommend_button_11.setText('AI/数据科学')
        self.recommend_button_11.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(1)), 2, 1))
        self.recommend_button_11.setIcon(QIcon('./picture/数据科学2.jpg'))
        self.recommend_button_11.setIconSize(QSize(100, 100))
        self.recommend_button_11.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_12 = QToolButton()
        self.recommend_button_12.setText('产品与运营')
        self.recommend_button_12.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(2)), 2, 1))
        self.recommend_button_12.setIcon(QIcon('./picture/产品与运营2.jpg'))
        self.recommend_button_12.setIconSize(QSize(100, 100))
        self.recommend_button_12.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_13 = QToolButton()
        self.recommend_button_13.setText('生活兴趣')
        self.recommend_button_13.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(3)), 2, 1))
        self.recommend_button_13.setIcon(QIcon('./picture/生活兴趣2.jpg'))
        self.recommend_button_13.setIconSize(QSize(100, 100))
        self.recommend_button_13.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_14 = QToolButton()
        self.recommend_button_14.setText('电商运营')
        self.recommend_button_14.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(4)), 2, 1))
        self.recommend_button_14.setIcon(QIcon('./picture/电商运营2.jpg'))
        self.recommend_button_14.setIconSize(QSize(100, 100))
        self.recommend_button_14.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_15 = QToolButton()
        self.recommend_button_15.setText('编程与开发')
        self.recommend_button_15.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(5)), 2, 1))
        self.recommend_button_15.setIcon(QIcon('./picture/编程与开发2.jpg'))
        self.recommend_button_15.setIconSize(QSize(100, 100))
        self.recommend_button_15.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_16 = QToolButton()
        self.recommend_button_16.setText('职业考试')
        self.recommend_button_16.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(6)), 2, 1))
        self.recommend_button_16.setIcon(QIcon('./picture/职业考试2.jpg'))
        self.recommend_button_16.setIconSize(QSize(100, 100))
        self.recommend_button_16.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_17 = QToolButton()
        self.recommend_button_17.setText('职场提升')
        self.recommend_button_17.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(7)), 2, 1))
        self.recommend_button_17.setIcon(QIcon('./picture/职场提升2.jpg'))
        self.recommend_button_17.setIconSize(QSize(100, 100))
        self.recommend_button_17.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_18 = QToolButton()
        self.recommend_button_18.setText('设计创意')
        self.recommend_button_18.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(8)), 2, 1))
        self.recommend_button_18.setIcon(QIcon('./picture/设计创意2.jpg'))
        self.recommend_button_18.setIconSize(QSize(100, 100))
        self.recommend_button_18.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_19 = QToolButton()
        self.recommend_button_19.setText('语言学习')
        self.recommend_button_19.clicked.connect(lambda : cloud(data_classification(self.data, self.cate, data_class(9)), 2, 1))
        self.recommend_button_19.setIcon(QIcon('./picture/语言学习2.jpg'))
        self.recommend_button_19.setIconSize(QSize(100, 100))
        self.recommend_button_19.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_20 = QToolButton()
        self.recommend_button_20.setText('所有课程')
        self.recommend_button_20.clicked.connect(lambda : cloud(self.data, 2, 1))
        self.recommend_button_20.setIcon(QIcon('./picture/所有课程2.jpg'))
        self.recommend_button_20.setIconSize(QSize(100, 100))
        self.recommend_button_20.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.right_recommend_layout1.addWidget(self.recommend_button_11, 0, 0)
        self.right_recommend_layout1.addWidget(self.recommend_button_12, 0, 1)
        self.right_recommend_layout1.addWidget(self.recommend_button_13, 0, 2)
        self.right_recommend_layout1.addWidget(self.recommend_button_14, 0, 3)
        self.right_recommend_layout1.addWidget(self.recommend_button_15, 0, 4)
        self.right_recommend_layout1.addWidget(self.recommend_button_16, 1, 0)
        self.right_recommend_layout1.addWidget(self.recommend_button_17, 1, 1)
        self.right_recommend_layout1.addWidget(self.recommend_button_18, 1, 2)
        self.right_recommend_layout1.addWidget(self.recommend_button_19, 1, 3)
        self.right_recommend_layout1.addWidget(self.recommend_button_20, 1, 4)
        self.right_layout.addWidget(self.right_recommend_label1, 6, 0, 1, 9)
        self.right_layout.addWidget(self.right_recommend_widget1, 7, 0, 2, 9)
        self.right_recommend_widget.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')
        self.right_recommend_widget1.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')

    def popular_courses(self):
        self.ui()
        learner = learnerRank(self.data, self.cate)
        revenue = revenueRank(self.data, self.cate)
        self.right_recommend_label = QLabel('学习人数排名')
        self.right_recommend_label.setObjectName('right_lable')
        self.right_recommend_widget = QWidget()
        self.right_recommend_layout = QGridLayout()
        self.right_recommend_widget.setLayout(self.right_recommend_layout)
        self.recommend_button_1 = QToolButton()
        self.recommend_button_1.setText('AI/数据科学')
        self.recommend_button_1.clicked.connect(lambda : learner.data_hand(data_classification(self.data, self.cate, data_class(1))))
        self.recommend_button_1.setIcon(QIcon('./picture/数据科学3.jpg'))
        self.recommend_button_1.setIconSize(QSize(100, 100))
        self.recommend_button_1.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_2 = QToolButton()
        self.recommend_button_2.setText('产品与运营')
        self.recommend_button_2.clicked.connect(lambda : learner.data_hand(data_classification(self.data, self.cate, data_class(2))))
        self.recommend_button_2.setIcon(QIcon('./picture/产品与运营3.jpg'))
        self.recommend_button_2.setIconSize(QSize(100, 100))
        self.recommend_button_2.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_3 = QToolButton()
        self.recommend_button_3.setText('生活兴趣')
        self.recommend_button_3.clicked.connect(lambda : learner.data_hand(data_classification(self.data, self.cate, data_class(3))))
        self.recommend_button_3.setIcon(QIcon('./picture/生活兴趣3.jpg'))
        self.recommend_button_3.setIconSize(QSize(100, 100))
        self.recommend_button_3.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_4 = QToolButton()
        self.recommend_button_4.setText('电商运营')
        self.recommend_button_4.clicked.connect(lambda : learner.data_hand(data_classification(self.data, self.cate, data_class(4))))
        self.recommend_button_4.setIcon(QIcon('./picture/电商运营3.jpg'))
        self.recommend_button_4.setIconSize(QSize(100, 100))
        self.recommend_button_4.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_5 = QToolButton()
        self.recommend_button_5.setText('编程与开发')
        self.recommend_button_5.clicked.connect(lambda : learner.data_hand(data_classification(self.data, self.cate, data_class(5))))
        self.recommend_button_5.setIcon(QIcon('./picture/编程与开发3.jpg'))
        self.recommend_button_5.setIconSize(QSize(100, 100))
        self.recommend_button_5.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_6 = QToolButton()
        self.recommend_button_6.setText('职业考试')
        self.recommend_button_6.clicked.connect(lambda : learner.data_hand(data_classification(self.data, self.cate, data_class(6))))
        self.recommend_button_6.setIcon(QIcon('./picture/职业考试3.jpg'))
        self.recommend_button_6.setIconSize(QSize(100, 100))
        self.recommend_button_6.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_7 = QToolButton()
        self.recommend_button_7.setText('职场提升')
        self.recommend_button_7.clicked.connect(lambda : learner.data_hand(data_classification(self.data, self.cate, data_class(7))))
        self.recommend_button_7.setIcon(QIcon('./picture/职场提升3.jpg'))
        self.recommend_button_7.setIconSize(QSize(100, 100))
        self.recommend_button_7.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_8 = QToolButton()
        self.recommend_button_8.setText('设计创意')
        self.recommend_button_8.clicked.connect(lambda : learner.data_hand(data_classification(self.data, self.cate, data_class(8))))
        self.recommend_button_8.setIcon(QIcon('./picture/设计创意3.jpg'))
        self.recommend_button_8.setIconSize(QSize(100, 100))
        self.recommend_button_8.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_9 = QToolButton()
        self.recommend_button_9.setText('语言学习')
        self.recommend_button_9.clicked.connect(lambda : learner.data_hand(data_classification(self.data, self.cate, data_class(9))))
        self.recommend_button_9.setIcon(QIcon('./picture/语言学习3.jpg'))
        self.recommend_button_9.setIconSize(QSize(100, 100))
        self.recommend_button_9.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_10 = QToolButton()
        self.recommend_button_10.setText('所有课程')
        self.recommend_button_10.clicked.connect(lambda : learner.data_hand(self.data))
        self.recommend_button_10.setIcon(QIcon('./picture/所有课程3.jpg'))
        self.recommend_button_10.setIconSize(QSize(100, 100))
        self.recommend_button_10.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.right_recommend_layout.addWidget(self.recommend_button_1, 0, 0)
        self.right_recommend_layout.addWidget(self.recommend_button_2, 0, 1)
        self.right_recommend_layout.addWidget(self.recommend_button_3, 0, 2)
        self.right_recommend_layout.addWidget(self.recommend_button_4, 0, 3)
        self.right_recommend_layout.addWidget(self.recommend_button_5, 0, 4)
        self.right_recommend_layout.addWidget(self.recommend_button_6, 1, 0)
        self.right_recommend_layout.addWidget(self.recommend_button_7, 1, 1)
        self.right_recommend_layout.addWidget(self.recommend_button_8, 1, 2)
        self.right_recommend_layout.addWidget(self.recommend_button_9, 1, 3)
        self.right_recommend_layout.addWidget(self.recommend_button_10, 1, 4)
        self.right_layout.addWidget(self.right_recommend_label, 1, 0, 1, 9)
        self.right_layout.addWidget(self.right_recommend_widget, 2, 0, 2, 9)
        self.right_recommend_label1 = QLabel('课程收入排名')
        self.right_recommend_label1.setObjectName('right_lable')
        self.right_recommend_widget1 = QWidget()
        self.right_recommend_layout1 = QGridLayout()
        self.right_recommend_widget1.setLayout(self.right_recommend_layout1)
        self.recommend_button_11 = QToolButton()
        self.recommend_button_11.setText('AI/数据科学')
        self.recommend_button_11.clicked.connect(lambda : revenue.data_hand(data_classification(self.data, self.cate, data_class(1))))
        self.recommend_button_11.setIcon(QIcon('./picture/数据科学4.jpg'))
        self.recommend_button_11.setIconSize(QSize(100, 100))
        self.recommend_button_11.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_12 = QToolButton()
        self.recommend_button_12.setText('产品与运营')
        self.recommend_button_12.clicked.connect(lambda : revenue.data_hand(data_classification(self.data, self.cate, data_class(2))))
        self.recommend_button_12.setIcon(QIcon('./picture/产品与运营4.jpg'))
        self.recommend_button_12.setIconSize(QSize(100, 100))
        self.recommend_button_12.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_13 = QToolButton()
        self.recommend_button_13.setText('生活兴趣')
        self.recommend_button_13.clicked.connect(lambda : revenue.data_hand(data_classification(self.data, self.cate, data_class(3))))
        self.recommend_button_13.setIcon(QIcon('./picture/生活兴趣4.jpg'))
        self.recommend_button_13.setIconSize(QSize(100, 100))
        self.recommend_button_13.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_14 = QToolButton()
        self.recommend_button_14.setText('电商运营')
        self.recommend_button_14.clicked.connect(lambda : revenue.data_hand(data_classification(self.data, self.cate, data_class(4))))
        self.recommend_button_14.setIcon(QIcon('./picture/电商运营4.jpg'))
        self.recommend_button_14.setIconSize(QSize(100, 100))
        self.recommend_button_14.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_15 = QToolButton()
        self.recommend_button_15.setText('编程与开发')
        self.recommend_button_15.clicked.connect(lambda : revenue.data_hand(data_classification(self.data, self.cate, data_class(5))))
        self.recommend_button_15.setIcon(QIcon('./picture/编程与开发4.jpg'))
        self.recommend_button_15.setIconSize(QSize(100, 100))
        self.recommend_button_15.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_16 = QToolButton()
        self.recommend_button_16.setText('职业考试')
        self.recommend_button_16.clicked.connect(lambda : revenue.data_hand(data_classification(self.data, self.cate, data_class(6))))
        self.recommend_button_16.setIcon(QIcon('./picture/职业考试4.jpg'))
        self.recommend_button_16.setIconSize(QSize(100, 100))
        self.recommend_button_16.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_17 = QToolButton()
        self.recommend_button_17.setText('职场提升')
        self.recommend_button_17.clicked.connect(lambda : revenue.data_hand(data_classification(self.data, self.cate, data_class(7))))
        self.recommend_button_17.setIcon(QIcon('./picture/职场提升4.jpg'))
        self.recommend_button_17.setIconSize(QSize(100, 100))
        self.recommend_button_17.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_18 = QToolButton()
        self.recommend_button_18.setText('设计创意')
        self.recommend_button_18.clicked.connect(lambda : revenue.data_hand(data_classification(self.data, self.cate, data_class(8))))
        self.recommend_button_18.setIcon(QIcon('./picture/设计创意4.jpg'))
        self.recommend_button_18.setIconSize(QSize(100, 100))
        self.recommend_button_18.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_19 = QToolButton()
        self.recommend_button_19.setText('语言学习')
        self.recommend_button_19.clicked.connect(lambda : revenue.data_hand(data_classification(self.data, self.cate, data_class(9))))
        self.recommend_button_19.setIcon(QIcon('./picture/语言学习4.jpg'))
        self.recommend_button_19.setIconSize(QSize(100, 100))
        self.recommend_button_19.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_20 = QToolButton()
        self.recommend_button_20.setText('所有课程')
        self.recommend_button_20.clicked.connect(lambda : revenue.data_hand(self.data))
        self.recommend_button_20.setIcon(QIcon('./picture/所有课程4.jpg'))
        self.recommend_button_20.setIconSize(QSize(100, 100))
        self.recommend_button_20.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.right_recommend_layout1.addWidget(self.recommend_button_11, 0, 0)
        self.right_recommend_layout1.addWidget(self.recommend_button_12, 0, 1)
        self.right_recommend_layout1.addWidget(self.recommend_button_13, 0, 2)
        self.right_recommend_layout1.addWidget(self.recommend_button_14, 0, 3)
        self.right_recommend_layout1.addWidget(self.recommend_button_15, 0, 4)
        self.right_recommend_layout1.addWidget(self.recommend_button_16, 1, 0)
        self.right_recommend_layout1.addWidget(self.recommend_button_17, 1, 1)
        self.right_recommend_layout1.addWidget(self.recommend_button_18, 1, 2)
        self.right_recommend_layout1.addWidget(self.recommend_button_19, 1, 3)
        self.right_recommend_layout1.addWidget(self.recommend_button_20, 1, 4)
        self.right_layout.addWidget(self.right_recommend_label1, 5, 0, 1, 9)
        self.right_layout.addWidget(self.right_recommend_widget1, 6, 0, 2, 9)
        self.right_recommend_widget.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')
        self.right_recommend_widget1.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')

    def report(self):
        try:
            QMessageBox.information(None, '提示', '正在生成报告，报告生成后将会提醒您，请稍候。', QMessageBox.Yes)
            data = get_pandasdata()
            self.profile = pandas_profiling.ProfileReport(data)
        except:
            QMessageBox.information(None, '警告', 'Something is wrong!', QMessageBox.Yes)
        self.pdreport = pdReport(self.profile)
        QMessageBox.information(None, '提示', '报告生成成功！', QMessageBox.Yes)
        self.report_0()

    def report_ui(self):
        self.ui()
        self.right_report_label = QLabel('网易云课堂数据分析报告')
        self.right_report_label.setObjectName('right_lable')
        self.right_report_widget = QWidget()
        self.right_report_layout = QGridLayout()
        self.right_report_button_0 = QPushButton( '数据概览')
        self.right_report_button_0.clicked.connect(lambda : self.report_0())
        self.right_report_button_0.setObjectName('right_button')
        self.right_report_layout.addWidget(self.right_report_button_0, 0, 0)
        self.right_report_button_1 = QPushButton( '详细条目')
        self.right_report_button_1.clicked.connect(lambda : self.report_1())
        self.right_report_button_1.setObjectName('right_button')
        self.right_report_layout.addWidget(self.right_report_button_1, 0, 1)
        self.right_report_button_2 = QPushButton('数据关联')
        self.right_report_button_2.clicked.connect(lambda : self.report_2())
        self.right_report_button_2.setObjectName('right_button')
        self.right_report_layout.addWidget(self.right_report_button_2, 0, 2)
        self.right_report_button_3 = QPushButton('数据样本')
        self.right_report_button_3.clicked.connect(lambda : self.report_3())
        self.right_report_button_3.setObjectName('right_button')
        self.right_report_layout.addWidget(self.right_report_button_3, 0, 3)
        self.right_report_label_0 = QLabel('报告生成时间: '+str(self.pdreport.date)+' powered by: pandas-profiling v2.4.0')
        self.right_report_label_0.setObjectName('right_lable')
        self.right_report_layout.addWidget(self.right_report_label_0, 1, 0, 1, 4)
        self.right_report_widget.setLayout(self.right_report_layout)
        self.right_layout.addWidget(self.right_report_label, 1, 0, 1, 9)
        self.right_layout.addWidget(self.right_report_widget, 2, 0, 2, 9)

    def report_0(self):
        self.report_ui()
        self.right_report_label1 = QLabel('基本信息')
        self.right_report_label1.setObjectName('right_lable')
        self.right_report_widget1 = QWidget()
        self.right_report_layout1 = QGridLayout()
        self.right_report_widget1.setLayout(self.right_report_layout1)      
        self.right_report_label1_1 = QLabel('项目条目:\t'+str(self.pdreport.table['n_var']))
        self.right_report_label1_1.setObjectName('right_lable')
        self.right_report_label1_2 = QLabel('遗漏数据:\t'+str(self.pdreport.table['n_cells_missing']))
        self.right_report_label1_2.setObjectName('right_lable')
        self.right_report_label1_3 = QLabel('数据大小:\t'+str(self.pdreport.table['memory_size'])+' B')
        self.right_report_label1_3.setObjectName('right_lable')
        self.right_report_label1_4 = QLabel('项目数量:\t'+str(self.pdreport.table['n']))
        self.right_report_label1_4.setObjectName('right_lable')
        self.right_report_label1_5 = QLabel('重复数据:\t'+str(self.pdreport.table['n_duplicates']))
        self.right_report_label1_5.setObjectName('right_lable')
        self.right_report_label1_6 = QLabel('平均大小:\t'+str(self.pdreport.table['record_size'])+' B')
        self.right_report_label1_6.setObjectName('right_lable')
        self.right_report_label1_7 = QLabel('点击“详细条目”以查看更多信息，“数据关联”以查看数据间关系，“数据样本”以查看具体数据')
        self.right_report_label1_7.setObjectName('right_lable')
        self.right_report_layout1.addWidget(self.right_report_label1_1, 0, 0, 1, 2)
        self.right_report_layout1.addWidget(self.right_report_label1_2, 1, 0, 1, 2)
        self.right_report_layout1.addWidget(self.right_report_label1_3, 2, 0, 1, 2)
        self.right_report_layout1.addWidget(self.right_report_label1_4, 0, 2, 1, 2)
        self.right_report_layout1.addWidget(self.right_report_label1_5, 1, 2, 1, 2)
        self.right_report_layout1.addWidget(self.right_report_label1_6, 2, 2, 1, 2)
        self.right_report_layout1.addWidget(self.right_report_label1_7, 3, 0, 1, 4)
        self.right_report_label2 = QLabel('数据警告')
        self.right_report_label2.setObjectName('right_lable')
        self.right_report_widget2 = QWidget()
        self.right_report_layout2 = QGridLayout()
        self.right_report_widget2.setLayout(self.right_report_layout2)
        self.right_report_List = QListWidget(self)
        for item in self.pdreport.messages:
            if item.message_type.value == 1:
                vitem=item.column_name+' 可能为定值。'
            elif item.message_type.value == 2:
                vitem=item.column_name+' 存在大量零值。'
            elif item.message_type.value == 3:
                vitem=item.column_name+' 存在关联变量。'
            elif item.message_type.value == 4:
                vitem=item.column_name+' 可能为同类项。'
            elif item.message_type.value == 5:
                vitem=item.column_name+' 值差异度过大。'
            elif item.message_type.value == 6:
                vitem=item.column_name+' 存在不支持类型。'
            elif item.message_type.value == 7:
                vitem='存在重复项。'
            elif item.message_type.value == 8:
                vitem=item.column_name+' 存在严重数据偏差。'
            elif item.message_type.value == 9:
                vitem=item.column_name+' 存在数据丢失。'
            elif item.message_type.value == 10:
                vitem=item.column_name+' 存在无穷值。'
            elif item.message_type.value == 11:
                vitem=item.column_name+' 可能为日期类型。'
            else:
                vitem='无法识别的错误。'
            self.right_report_List.addItem(vitem)
        self.right_report_layout2.addWidget(self.right_report_List, 0, 0)
        self.right_layout.addWidget(self.right_report_label1, 4, 0, 1, 9)
        self.right_layout.addWidget(self.right_report_widget1, 5, 0, 3, 9)
        self.right_layout.addWidget(self.right_report_label2, 8, 0, 1, 9)
        self.right_layout.addWidget(self.right_report_widget2, 9, 0, 3, 9)
        self.right_report_widget1.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')
        self.right_report_widget2.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')

    def report_1(self):
        item, okPressed = QInputDialog.getItem(self, "提示","请选择条目:", self.pdreport.variables, 0, False)
        if not item:
            self.report_1()
        self.report_ui()
        self.right_report_widget1 = QWidget()
        self.right_report_layout1 = QGridLayout()
        self.right_report_widget1.setLayout(self.right_report_layout1)
        self.right_report_label_0 = QLabel('详细条目:')
        self.right_report_label_0.setObjectName('right_lable')
        self.right_report_label_1 = QLabel('名称:'+item)
        self.right_report_label_1.setObjectName('right_lable')
        self.right_report_label_2 = QLabel('类型:'+self.pdreport.variables[item]['type'].value)
        self.right_report_label_2.setObjectName('right_lable')  
        self.right_report_layout1.addWidget(self.right_report_label_0, 0, 0, 1, 2)
        self.right_report_layout1.addWidget(self.right_report_label_1, 0, 2, 1, 1)
        self.right_report_layout1.addWidget(self.right_report_label_2, 0, 3, 1, 1)
        self.right_report_label2 = QLabel('不同项: '+str(self.pdreport.variables[item]['distinct_count']))
        self.right_report_label2.setObjectName('right_lable')
        self.right_report_layout1.addWidget(self.right_report_label2, 1, 0, 1, 1)
        if self.pdreport.variables[item]['p_unique']<0.5:
            self.right_report_button2_0 = QPushButton( '显示图像')
            self.right_report_button2_0.clicked.connect(lambda : self.pdreport.showimg(item))
            self.right_report_button2_0.setObjectName('right_button')
            self.right_report_layout1.addWidget(self.right_report_button2_0, 1, 2, 1, 1)
        if self.pdreport.variables[item]['type'].value == 'CAT':
            self.right_report_label2_1 = QLabel('最大长度: '+str(self.pdreport.variables[item]['max_length']))
            self.right_report_label2_2 = QLabel('最小长度: '+str(self.pdreport.variables[item]['min_length']))
            self.right_report_label2_3 = QLabel('平均长度: %.5g'%self.pdreport.variables[item]['mean_length'])
            self.right_report_button2_4 = QPushButton( '示意图')
            self.right_report_button2_4.clicked.connect(lambda : self.pdreport.showlimg(item))
            self.right_report_button2_4.setObjectName('right_button')
            self.right_report_layout1.addWidget(self.right_report_button2_4, 2, 3, 1, 1)
        if self.pdreport.variables[item]['type'].value == 'NUM':
            self.right_report_label2_1 = QLabel('最大值: %.5g'%self.pdreport.variables[item]['max'])
            self.right_report_label2_2 = QLabel('最小值: %.5g'%self.pdreport.variables[item]['min'])
            self.right_report_label2_3 = QLabel('平均值: %.5g'%self.pdreport.variables[item]['mean'])
            self.right_report_label2_4 = QLabel('零值: '+str(self.pdreport.variables[item]['n_zeros']))
            self.right_report_label2_4.setObjectName('right_lable')
            self.right_report_layout1.addWidget(self.right_report_label2_4, 2, 3, 1, 1) 
            self.right_report_label2_5 = QLabel('方差: %.5g'%self.pdreport.variables[item]['variance'])
            self.right_report_label2_6 = QLabel('标准差: %.5g'%self.pdreport.variables[item]['std'])
            self.right_report_label2_7 = QLabel('变异系数: %.5g'%self.pdreport.variables[item]['cv'])
            self.right_report_label2_8 = QLabel('偏度: %.5g'%self.pdreport.variables[item]['skewness'])
            self.right_report_label2_5.setObjectName('right_lable')
            self.right_report_layout1.addWidget(self.right_report_label2_5, 3, 0, 1, 1) 
            self.right_report_label2_6.setObjectName('right_lable')
            self.right_report_layout1.addWidget(self.right_report_label2_6, 3, 1, 1, 1) 
            self.right_report_label2_7.setObjectName('right_lable')
            self.right_report_layout1.addWidget(self.right_report_label2_7, 3, 2, 1, 1) 
            self.right_report_label2_8.setObjectName('right_lable')
            self.right_report_layout1.addWidget(self.right_report_label2_8, 3, 3, 1, 1) 
        self.right_report_label2_1.setObjectName('right_lable')
        self.right_report_label2_2.setObjectName('right_lable')
        self.right_report_label2_3.setObjectName('right_lable')
        self.right_report_layout1.addWidget(self.right_report_label2_1, 2, 0, 1, 1)
        self.right_report_layout1.addWidget(self.right_report_label2_2, 2, 1, 1, 1) 
        self.right_report_layout1.addWidget(self.right_report_label2_3, 2, 2, 1, 1) 
        self.right_layout.addWidget(self.right_report_widget1, 4, 0, 1, 9)
        self.right_report_widget1.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')

        self.right_report_widget2 = QWidget()
        self.right_report_layout2 = QGridLayout()
        self.right_report_widget2.setLayout(self.right_report_layout2)
        self.right_report_Table = QTableWidget(len(self.pdreport.variables[item]['value_counts'].index),3)
        self.right_report_Table.setHorizontalHeaderLabels(['数值','数量','占比'])
        self.right_report_Table.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.right_report_Table.setColumnWidth(0,400)
        self.right_report_Table.setColumnWidth(1,80)
        self.right_report_Table.setColumnWidth(2,180)
        temp = 0
        for vitem in self.pdreport.variables[item]['value_counts'].index:
            if vitem == '0':
                continue
            vitem0 = QTableWidgetItem(str(vitem))
            vitem0.setTextAlignment(Qt.AlignHCenter)
            vitem1 = QTableWidgetItem(str(self.pdreport.variables[item]['value_counts'][vitem]))
            vitem1.setTextAlignment(Qt.AlignHCenter)
            vitem2 = QTableWidgetItem("%.5g%%"%((100*self.pdreport.variables[item]['value_counts'][vitem])/(self.pdreport.variables[item]['n'])))
            vitem2.setTextAlignment(Qt.AlignHCenter)
            self.right_report_Table.setItem(temp, 0, vitem0)
            self.right_report_Table.setItem(temp, 1, vitem1)
            self.right_report_Table.setItem(temp, 2, vitem2)
            temp = temp + 1
        self.right_report_layout2.addWidget(self.right_report_Table, 0, 0, 4, 4)
        self.right_layout.addWidget(self.right_report_widget2, 5, 0, 4, 9)
        self.right_report_widget2.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')
            
    def report_2(self):
        try:
            QMessageBox.information(None, '提示', '正在准备，请稍候。', QMessageBox.Yes)
            self.pdreport.getplot()
        except:
            QMessageBox.information(None, '警告', 'Something is wrong!', QMessageBox.Yes)
        QMessageBox.information(None, '提示', '准备完成！', QMessageBox.Yes)
        self.report_ui()
        self.right_report_widget1 = QWidget()
        self.right_report_layout1 = QGridLayout()
        self.right_report_widget1.setLayout(self.right_report_layout1)
        self.right_report_label_0 = QLabel('数据关联')
        self.right_report_label_0.setObjectName('right_lable')
        self.right_report_button1_1 = QPushButton( '皮尔森相关系数')
        self.right_report_button1_1.clicked.connect(lambda : self.report2_0('pearson'))
        self.right_report_button1_1.setObjectName('right_button')
        self.right_report_button1_2 = QPushButton('斯皮尔曼相关系数')
        self.right_report_button1_2.clicked.connect(lambda : self.report2_0('spearman'))
        self.right_report_button1_2.setObjectName('right_button')
        self.right_report_button1_3 = QPushButton('肯德尔相关系数')
        self.right_report_button1_3.clicked.connect(lambda : self.report2_0('kendall'))
        self.right_report_button1_3.setObjectName('right_button')
        self.right_report_button1_4 = QPushButton( '卡方检验系数φk')
        self.right_report_button1_4.clicked.connect(lambda : self.report2_0('phi_k'))
        self.right_report_button1_4.setObjectName('right_button')
        self.right_report_button1_5 = QPushButton('卡方检验系数φk修正值')
        self.right_report_button1_5.clicked.connect(lambda : self.report2_0('cramers'))
        self.right_report_button1_5.setObjectName('right_button')
        self.right_report_button1_6 = QPushButton('重编码')
        self.right_report_button1_6.clicked.connect(lambda : self.report2_0('recoded'))
        self.right_report_button1_6.setObjectName('right_button')
        self.right_report_layout1.addWidget(self.right_report_label_0, 0, 0, 2, 1)
        self.right_report_layout1.addWidget(self.right_report_button1_1, 0, 1, 1, 1)
        self.right_report_layout1.addWidget(self.right_report_button1_2, 0, 2, 1, 1)
        self.right_report_layout1.addWidget(self.right_report_button1_3, 0, 3, 1, 1)
        self.right_report_layout1.addWidget(self.right_report_button1_4, 1, 1, 1, 1)
        self.right_report_layout1.addWidget(self.right_report_button1_5, 1, 2, 1, 1)
        self.right_report_layout1.addWidget(self.right_report_button1_6, 1, 3, 1, 1)
        self.right_layout.addWidget(self.right_report_widget1, 4, 0, 2, 9)
        self.right_report_widget1.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')
        self.report2_0('pearson')

    def report2_0(self,imgname):
        try:
            self.right_report_label2.setText(imgname)
            self.right_report_label2_1.setPixmap(QPixmap('./report/'+imgname+'.svg'))
        except:
            self.right_report_widget2 = QWidget()
            self.right_report_layout2 = QGridLayout()
            self.right_report_widget2.setLayout(self.right_report_layout2)
            self.right_report_label2 = QLabel(imgname)
            self.right_report_label2.setObjectName('right_lable')
            self.right_report_label2_1 = QLabel(' ')
            self.right_report_label2_1.setObjectName('right_lable')
            self.right_report_label2_1.setPixmap(QPixmap('./report/'+imgname+'.svg'))
            self.right_report_layout2.addWidget(self.right_report_label2, 0, 1, 1, 2)
            self.right_report_layout2.addWidget(self.right_report_label2_1, 1, 0, 4, 4) 
            self.right_layout.addWidget(self.right_report_widget2, 6, 0, 4, 9)
            self.right_report_widget2.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')
            
    def report_3(self):
        self.report_ui()
        self.right_report_label1 = QLabel('样本前十')
        self.right_report_label1.setObjectName('right_lable')
        self.right_report_widget1 = QWidget()
        self.right_report_layout1 = QGridLayout()
        self.right_report_widget1.setLayout(self.right_report_layout1)
        self.Tb1 = QTableWidget(10,8)
        self.Tb1.setHorizontalHeaderLabels(self.pdreport.Thead)
        self.Tb1.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.Tb1.setColumnWidth(0,200)
        self.Tb1.setColumnWidth(1,200)
        self.Tb1.setColumnWidth(2,100)
        self.Tb1.setColumnWidth(3,70)
        self.Tb1.setColumnWidth(4,70)
        self.Tb1.setColumnWidth(5,100)
        self.Tb1.setColumnWidth(6,70)
        self.Tb1.setColumnWidth(7,70)
        self.right_report_layout1.addWidget(self.Tb1, 0, 0)
        self.right_report_label2 = QLabel('样本后十')
        self.right_report_label2.setObjectName('right_lable')
        self.right_report_widget2 = QWidget()
        self.right_report_layout2 = QGridLayout()
        self.right_report_widget2.setLayout(self.right_report_layout2)
        self.Tb2 = QTableWidget(10,8)
        self.Tb2.setHorizontalHeaderLabels(self.pdreport.Thead)
        self.Tb2.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.Tb2.setColumnWidth(0,200)
        self.Tb2.setColumnWidth(1,200)
        self.Tb2.setColumnWidth(2,100)
        self.Tb2.setColumnWidth(3,70)
        self.Tb2.setColumnWidth(4,70)
        self.Tb2.setColumnWidth(5,100)
        self.Tb2.setColumnWidth(6,70)
        self.Tb2.setColumnWidth(7,70)
        self.right_report_layout2.addWidget(self.Tb2, 0, 0)
        self.right_layout.addWidget(self.right_report_label1, 4, 0, 1, 9)
        self.right_layout.addWidget(self.right_report_widget1, 5, 0, 3, 9)
        self.right_layout.addWidget(self.right_report_label2, 8, 0, 1, 9)
        self.right_layout.addWidget(self.right_report_widget2, 9, 0, 3, 9)
        self.right_report_widget1.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')
        self.right_report_widget2.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')
        for i in range(10):
            for j in range(len(self.pdreport.Thead)):
                iTem = QTableWidgetItem(str(list(self.pdreport.head[self.pdreport.Thead[j]])[i]))
                iTem.setTextAlignment(Qt.AlignHCenter)
                self.Tb1.setItem(i, j, iTem)
        for i in range(10):
            for j in range(len(self.pdreport.Thead)):
                iTem = QTableWidgetItem(str(list(self.pdreport.tail[self.pdreport.Thead[j]])[i]))
                iTem.setTextAlignment(Qt.AlignHCenter)
                self.Tb2.setItem(i, j, iTem)

    def change_trend(self):
        self.ui()
        self.right_recommend_label = QLabel('课程平均收入')
        self.right_recommend_label.setObjectName('right_lable')
        self.right_recommend_widget = QWidget()
        self.right_recommend_layout = QGridLayout()
        self.right_recommend_widget.setLayout(self.right_recommend_layout)
        self.recommend_button_1 = QToolButton()
        self.recommend_button_1.setText('AI/数据科学')
        self.recommend_button_1.clicked.connect(lambda : input_days(1, 3))
        self.recommend_button_1.setIcon(QIcon('./picture/数据科学5.jpg'))
        self.recommend_button_1.setIconSize(QSize(100, 60))
        self.recommend_button_1.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_2 = QToolButton()
        self.recommend_button_2.setText('产品与运营')
        self.recommend_button_2.clicked.connect(lambda : input_days(2, 3))
        self.recommend_button_2.setIcon(QIcon('./picture/产品与运营5.jpg'))
        self.recommend_button_2.setIconSize(QSize(100, 60))
        self.recommend_button_2.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_3 = QToolButton()
        self.recommend_button_3.setText('生活兴趣')
        self.recommend_button_3.clicked.connect(lambda : input_days(3, 3))
        self.recommend_button_3.setIcon(QIcon('./picture/生活兴趣5.jpg'))
        self.recommend_button_3.setIconSize(QSize(100, 60))
        self.recommend_button_3.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_4 = QToolButton()
        self.recommend_button_4.setText('电商运营')
        self.recommend_button_4.clicked.connect(lambda : input_days(4, 3))
        self.recommend_button_4.setIcon(QIcon('./picture/电商运营5.jpg'))
        self.recommend_button_4.setIconSize(QSize(100, 60))
        self.recommend_button_4.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_5 = QToolButton()
        self.recommend_button_5.setText('编程与开发')
        self.recommend_button_5.clicked.connect(lambda : input_days(5, 3))
        self.recommend_button_5.setIcon(QIcon('./picture/编程与开发5.jpg'))
        self.recommend_button_5.setIconSize(QSize(100, 60))
        self.recommend_button_5.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_6 = QToolButton()
        self.recommend_button_6.setText('职业考试')
        self.recommend_button_6.clicked.connect(lambda : input_days(6, 3))
        self.recommend_button_6.setIcon(QIcon('./picture/职业考试5.jpg'))
        self.recommend_button_6.setIconSize(QSize(100, 60))
        self.recommend_button_6.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_7 = QToolButton()
        self.recommend_button_7.setText('职场提升')
        self.recommend_button_7.clicked.connect(lambda : input_days(7, 3))
        self.recommend_button_7.setIcon(QIcon('./picture/职场提升5.jpg'))
        self.recommend_button_7.setIconSize(QSize(100, 60))
        self.recommend_button_7.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_8 = QToolButton()
        self.recommend_button_8.setText('设计创意')
        self.recommend_button_8.clicked.connect(lambda : self.input_days(8, 3))
        self.recommend_button_8.setIcon(QIcon('./picture/设计创意5.jpg'))
        self.recommend_button_8.setIconSize(QSize(100, 60))
        self.recommend_button_8.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_9 = QToolButton()
        self.recommend_button_9.setText('语言学习')
        self.recommend_button_9.clicked.connect(lambda : self.input_days(9, 3))
        self.recommend_button_9.setIcon(QIcon('./picture/语言学习5.jpg'))
        self.recommend_button_9.setIconSize(QSize(100, 60))
        self.recommend_button_9.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_10 = QToolButton()
        self.recommend_button_10.setText('所有课程')
        self.recommend_button_10.clicked.connect(lambda : self.input_days(0, 3))
        self.recommend_button_10.setIcon(QIcon('./picture/所有课程5.jpg'))
        self.recommend_button_10.setIconSize(QSize(100, 60))
        self.recommend_button_10.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.right_recommend_layout.addWidget(self.recommend_button_1, 0, 0)
        self.right_recommend_layout.addWidget(self.recommend_button_2, 0, 1)
        self.right_recommend_layout.addWidget(self.recommend_button_3, 0, 2)
        self.right_recommend_layout.addWidget(self.recommend_button_4, 0, 3)
        self.right_recommend_layout.addWidget(self.recommend_button_5, 0, 4)
        self.right_recommend_layout.addWidget(self.recommend_button_6, 1, 0)
        self.right_recommend_layout.addWidget(self.recommend_button_7, 1, 1)
        self.right_recommend_layout.addWidget(self.recommend_button_8, 1, 2)
        self.right_recommend_layout.addWidget(self.recommend_button_9, 1, 3)
        self.right_recommend_layout.addWidget(self.recommend_button_10, 1, 4)
        self.right_layout.addWidget(self.right_recommend_label, 1, 0, 1, 9)
        self.right_layout.addWidget(self.right_recommend_widget, 2, 0, 2, 9)
        self.right_recommend_label1 = QLabel('课程平均得分')
        self.right_recommend_label1.setObjectName('right_lable')
        self.right_recommend_widget1 = QWidget()
        self.right_recommend_layout1 = QGridLayout()
        self.right_recommend_widget1.setLayout(self.right_recommend_layout1)
        self.recommend_button_11 = QToolButton()
        self.recommend_button_11.setText('AI/数据科学')
        self.recommend_button_11.clicked.connect(lambda : self.input_days(1, 2))
        self.recommend_button_11.setIcon(QIcon('./picture/数据科学6.jpg'))
        self.recommend_button_11.setIconSize(QSize(100, 60))
        self.recommend_button_11.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_12 = QToolButton()
        self.recommend_button_12.setText('产品与运营')
        self.recommend_button_12.clicked.connect(lambda : self.input_days(2, 2))
        self.recommend_button_12.setIcon(QIcon('./picture/产品与运营6.jpg'))
        self.recommend_button_12.setIconSize(QSize(100, 60))
        self.recommend_button_12.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_13 = QToolButton()
        self.recommend_button_13.setText('生活兴趣')
        self.recommend_button_13.clicked.connect(lambda : self.input_days(3, 2))
        self.recommend_button_13.setIcon(QIcon('./picture/生活兴趣6.jpg'))
        self.recommend_button_13.setIconSize(QSize(100, 60))
        self.recommend_button_13.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_14 = QToolButton()
        self.recommend_button_14.setText('电商运营')
        self.recommend_button_14.clicked.connect(lambda : self.input_days(4, 2))
        self.recommend_button_14.setIcon(QIcon('./picture/电商运营6.jpg'))
        self.recommend_button_14.setIconSize(QSize(100, 60))
        self.recommend_button_14.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_15 = QToolButton()
        self.recommend_button_15.setText('编程与开发')
        self.recommend_button_15.clicked.connect(lambda : self.input_days(5, 2))
        self.recommend_button_15.setIcon(QIcon('./picture/编程与开发6.jpg'))
        self.recommend_button_15.setIconSize(QSize(100, 60))
        self.recommend_button_15.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_16 = QToolButton()
        self.recommend_button_16.setText('职业考试')
        self.recommend_button_16.clicked.connect(lambda : self.input_days(6, 2))
        self.recommend_button_16.setIcon(QIcon('./picture/职业考试6.jpg'))
        self.recommend_button_16.setIconSize(QSize(100, 60))
        self.recommend_button_16.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_17 = QToolButton()
        self.recommend_button_17.setText('职场提升')
        self.recommend_button_17.clicked.connect(lambda : self.input_days(7, 2))
        self.recommend_button_17.setIcon(QIcon('./picture/职场提升6.jpg'))
        self.recommend_button_17.setIconSize(QSize(100, 60))
        self.recommend_button_17.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_18 = QToolButton()
        self.recommend_button_18.setText('设计创意')
        self.recommend_button_18.clicked.connect(lambda : self.input_days(8, 2))
        self.recommend_button_18.setIcon(QIcon('./picture/设计创意2.jpg'))
        self.recommend_button_18.setIconSize(QSize(100, 60))
        self.recommend_button_18.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_19 = QToolButton()
        self.recommend_button_19.setText('语言学习')
        self.recommend_button_19.clicked.connect(lambda : self.input_days(9, 2))
        self.recommend_button_19.setIcon(QIcon('./picture/语言学习6.jpg'))
        self.recommend_button_19.setIconSize(QSize(100, 60))
        self.recommend_button_19.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_20 = QToolButton()
        self.recommend_button_20.setText('所有课程')
        self.recommend_button_20.clicked.connect(lambda : self.input_days(0, 2))
        self.recommend_button_20.setIcon(QIcon('./picture/所有课程6.jpg'))
        self.recommend_button_20.setIconSize(QSize(100, 60))
        self.recommend_button_20.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.right_recommend_layout1.addWidget(self.recommend_button_11, 0, 0)
        self.right_recommend_layout1.addWidget(self.recommend_button_12, 0, 1)
        self.right_recommend_layout1.addWidget(self.recommend_button_13, 0, 2)
        self.right_recommend_layout1.addWidget(self.recommend_button_14, 0, 3)
        self.right_recommend_layout1.addWidget(self.recommend_button_15, 0, 4)
        self.right_recommend_layout1.addWidget(self.recommend_button_16, 1, 0)
        self.right_recommend_layout1.addWidget(self.recommend_button_17, 1, 1)
        self.right_recommend_layout1.addWidget(self.recommend_button_18, 1, 2)
        self.right_recommend_layout1.addWidget(self.recommend_button_19, 1, 3)
        self.right_recommend_layout1.addWidget(self.recommend_button_20, 1, 4)
        self.right_layout.addWidget(self.right_recommend_label1, 5, 0, 1, 9)
        self.right_layout.addWidget(self.right_recommend_widget1, 6, 0, 2, 9)
        self.right_recommend_label2 = QLabel('平均学习人数')
        self.right_recommend_label2.setObjectName('right_lable')
        self.right_recommend_widget2 = QWidget()
        self.right_recommend_layout2 = QGridLayout()
        self.right_recommend_widget2.setLayout(self.right_recommend_layout2)
        self.recommend_button_21 = QToolButton()
        self.recommend_button_21.setText('AI/数据科学')
        self.recommend_button_21.clicked.connect(lambda : self.input_days(1, 1))
        self.recommend_button_21.setIcon(QIcon('./picture/数据科学7.jpg'))
        self.recommend_button_21.setIconSize(QSize(100, 60))
        self.recommend_button_21.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_22 = QToolButton()
        self.recommend_button_22.setText('产品与运营')
        self.recommend_button_22.clicked.connect(lambda : self.input_days(2, 1))
        self.recommend_button_22.setIcon(QIcon('./picture/产品与运营7.jpg'))
        self.recommend_button_22.setIconSize(QSize(100, 60))
        self.recommend_button_22.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_23 = QToolButton()
        self.recommend_button_23.setText('生活兴趣')
        self.recommend_button_23.clicked.connect(lambda : self.input_days(3, 1))
        self.recommend_button_23.setIcon(QIcon('./picture/生活兴趣7.jpg'))
        self.recommend_button_23.setIconSize(QSize(100, 60))
        self.recommend_button_23.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_24 = QToolButton()
        self.recommend_button_24.setText('电商运营')
        self.recommend_button_24.clicked.connect(lambda : self.input_days(4, 1))
        self.recommend_button_24.setIcon(QIcon('./picture/电商运营7.jpg'))
        self.recommend_button_24.setIconSize(QSize(100, 60))
        self.recommend_button_24.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_25 = QToolButton()
        self.recommend_button_25.setText('编程与开发')
        self.recommend_button_25.clicked.connect(lambda : self.input_days(5, 1))
        self.recommend_button_25.setIcon(QIcon('./picture/编程与开发7.jpg'))
        self.recommend_button_25.setIconSize(QSize(100, 60))
        self.recommend_button_25.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_26 = QToolButton()
        self.recommend_button_26.setText('职业考试')
        self.recommend_button_26.clicked.connect(lambda : self.input_days(6, 1))
        self.recommend_button_26.setIcon(QIcon('./picture/职业考试7.jpg'))
        self.recommend_button_26.setIconSize(QSize(100, 60))
        self.recommend_button_26.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_27 = QToolButton()
        self.recommend_button_27.setText('职场提升')
        self.recommend_button_27.clicked.connect(lambda : self.input_days(7, 1))
        self.recommend_button_27.setIcon(QIcon('./picture/职场提升7.jpg'))
        self.recommend_button_27.setIconSize(QSize(100, 60))
        self.recommend_button_27.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_28 = QToolButton()
        self.recommend_button_28.setText('设计创意')
        self.recommend_button_28.clicked.connect(lambda : self.input_days(8, 1))
        self.recommend_button_28.setIcon(QIcon('./picture/设计创意7.jpg'))
        self.recommend_button_28.setIconSize(QSize(100, 60))
        self.recommend_button_28.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_29 = QToolButton()
        self.recommend_button_29.setText('语言学习')
        self.recommend_button_29.clicked.connect(lambda : self.input_days(9, 1))
        self.recommend_button_29.setIcon(QIcon('./picture/语言学习7.jpg'))
        self.recommend_button_29.setIconSize(QSize(100, 60))
        self.recommend_button_29.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_30 = QToolButton()
        self.recommend_button_30.setText('所有课程')
        self.recommend_button_30.clicked.connect(lambda : self.input_days(0, 1))
        self.recommend_button_30.setIcon(QIcon('./picture/所有课程7.jpg'))
        self.recommend_button_30.setIconSize(QSize(100, 60))
        self.recommend_button_30.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.right_recommend_layout2.addWidget(self.recommend_button_21, 0, 0)
        self.right_recommend_layout2.addWidget(self.recommend_button_22, 0, 1)
        self.right_recommend_layout2.addWidget(self.recommend_button_23, 0, 2)
        self.right_recommend_layout2.addWidget(self.recommend_button_24, 0, 3)
        self.right_recommend_layout2.addWidget(self.recommend_button_25, 0, 4)
        self.right_recommend_layout2.addWidget(self.recommend_button_26, 1, 0)
        self.right_recommend_layout2.addWidget(self.recommend_button_27, 1, 1)
        self.right_recommend_layout2.addWidget(self.recommend_button_28, 1, 2)
        self.right_recommend_layout2.addWidget(self.recommend_button_29, 1, 3)
        self.right_recommend_layout2.addWidget(self.recommend_button_30, 1, 4)
        self.right_layout.addWidget(self.right_recommend_label2, 9, 0, 1, 9)
        self.right_layout.addWidget(self.right_recommend_widget2, 10, 0, 2, 9)
        self.right_recommend_widget.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')
        self.right_recommend_widget1.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')
        self.right_recommend_widget2.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')

    def distribution_of_courses(self):
        self.ui()
        self.right_recommend_widget = QWidget()
        self.right_recommend_layout = QGridLayout()
        self.right_recommend_widget.setLayout(self.right_recommend_layout)
        self.recommend_button_1 = QToolButton()
        self.recommend_button_1.setText('数量分布')
        self.recommend_button_1.clicked.connect(lambda : couseNumber(self.data, self.cate))
        self.recommend_button_1.setIcon(QIcon('./picture/课程数量分布.jpg'))
        self.recommend_button_1.setIconSize(QSize(140, 140))
        self.recommend_button_1.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_2 = QToolButton()
        self.recommend_button_2.setText('收入占比')
        self.recommend_button_2.clicked.connect(lambda : revenueDistribution(self.data, self.cate))
        self.recommend_button_2.setIcon(QIcon('./picture/课程收入占比.jpg'))
        self.recommend_button_2.setIconSize(QSize(140, 140))
        self.recommend_button_2.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.recommend_button_3 = QToolButton()
        self.recommend_button_3.setText('学习人数占比')
        self.recommend_button_3.clicked.connect(lambda : learnerDistribution(self.data, self.cate))
        self.recommend_button_3.setIcon(QIcon('./picture/学习人数占比.jpg'))
        self.recommend_button_3.setIconSize(QSize(140, 140))
        self.recommend_button_3.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.right_recommend_layout.addWidget(self.recommend_button_1, 0, 0)
        self.right_recommend_layout.addWidget(self.recommend_button_2, 0, 1)
        self.right_recommend_layout.addWidget(self.recommend_button_3, 0, 2)
        self.right_layout.addWidget(self.right_recommend_widget, 1, 0, 1, 9)
        self.right_recommend_widget.setStyleSheet('\n            QToolButton{border:none;}\n            QToolButton:hover{border-bottom:2px solid #F76677;}\n        ')

    def feedback(self):
        self.ui()
        self.right_recommend_label = QLabel('若您有任何指导性的建议，请反馈到我们的邮箱:2102735991@qq.com，谢谢合作!')
        self.right_recommend_label.setObjectName('right_lable')
        self.right_layout.addWidget(self.right_recommend_label, 1, 0, 1, 9)

    def join_us(self):
        self.ui()
        self.right_recommend_label = QLabel('我们的QQ公众号为:2707571796，里面会发布一些关于这个软件的有趣小故事。\n欢迎并期待您加入我们这个大家庭。')
        self.right_recommend_label.setObjectName('right_lable')
        self.right_layout.addWidget(self.right_recommend_label, 1, 0, 1, 9)

    def face_problem(self):
        self.ui()
        self.right_recommend_label = QLabel('1.若您点击"实时数据"按钮，此时软件系统正在网上爬取信息，在短时间内点击系统无反馈\n属于正常现象。\n2.生成"课程报告"需要一定的时间，请耐心等待。\n3.data文件夹下储存有您的往期数据，您查看课程的变化趋势时与之密切相关。\n若您有其它问题，请及时通知我们，我们将第一时间为您解决。\n联系电话:\n小助手1:18856359800\n小助手2:18856301011\n小助手3:17356379709\n我们随时欢迎您来电咨询。')
        self.right_recommend_label.setObjectName('right_lable')
        self.right_layout.addWidget(self.right_recommend_label, 1, 0, 1, 9)

    def predict(self):
        self.ui()
        self.label1 = QLabel('课程名称:')
        self.label1.setObjectName('right_lable')
        self.right_layout.addWidget(self.label1, 1, 3, 1, 3)
        self.text1 = QLineEdit()
        self.text1.setPlaceholderText('若您想要开设新课程，请在这里输入该课程名称')
        self.text1.setObjectName('right_lable')
        self.right_layout.addWidget(self.text1, 1, 4, 1, 4)
        self.label2 = QLabel('课程描述:')
        self.label2.setObjectName('right_lable')
        self.right_layout.addWidget(self.label2, 2, 3, 1, 3)
        self.text2 = QLineEdit()
        self.text2.setPlaceholderText('请输入课程描述页的内容')
        self.text2.setObjectName('right_lable')
        self.right_layout.addWidget(self.text2, 2, 4, 1, 7)
        self.label3 = QLabel('课程作者:')
        self.label3.setObjectName('right_lable')
        self.right_layout.addWidget(self.label3, 3, 3, 1, 3)
        self.text3 = QLineEdit()
        self.text3.setPlaceholderText('请输入课程提供者')
        self.text3.setObjectName('right_lable')
        self.right_layout.addWidget(self.text3, 3, 4, 1, 3)
        self.label4 = QLabel('课程原价:')
        self.label4.setObjectName('right_lable')
        self.right_layout.addWidget(self.label4, 4, 3, 1, 3)
        self.text4 = QLineEdit()
        self.text4.setPlaceholderText('请输入初始价格，仅数字')
        self.text4.setObjectName('right_lable')
        self.right_layout.addWidget(self.text4, 4, 4, 1, 2)
        self.label5 = QLabel('折扣价:')
        self.label5.setObjectName('right_lable')
        self.right_layout.addWidget(self.label5, 5, 3, 1, 3)
        self.text5 = QLineEdit()
        self.text5.setPlaceholderText('请输入课程折后价，仅数字')
        self.text5.setObjectName('right_lable')
        self.right_layout.addWidget(self.text5, 5, 4, 1, 2)
        self.sure = QPushButton()
        self.sure.setText('确定')
        self.sure.clicked.connect(lambda : self.certain())
        self.right_layout.addWidget(self.sure, 6, 4, 1, 1)

    def certain(self):
        try:
            message = np.array([self.text1.text(), self.text2.text(), self.text3.text(), float(self.text4.text()), float(self.text5.text())])
            learners, revenue, stars = course_forecasting(self.data, message, self.steps)
            QMessageBox.information(None, '预测结果', '预测您新开设课程最终情况为\n学习人数:%d人\n总收入:%d元\n评分:%.2f分' % (int(learners), int(revenue), stars), QMessageBox.Yes)
            self.steps = 1
        except:
            QMessageBox.information(None, '提示', '预测失败，可能是您输入格式错误！', QMessageBox.Yes)

    def input_days(self, kind, opt):
        day, okPressed = QInputDialog.getInt(self, "提示", "请输入时间跨度（天）:", 0, 0, 365, 1)
        if okPressed:
            try:
                trend_days(kind, opt, day)
            except:
                Qmessagebox.information(None, '警告', '输入无效')

    def mousePressEvent(self, e):
        if e.button() == Qt.LeftButton:
            self.m_drag = True
            self.m_DragPosition = e.globalPos() - self.pos()
            e.accept()
            self.setCursor(QCursor(Qt.OpenHandCursor))

    def mouseReleaseEvent(self, e):
        if e.button() == Qt.LeftButton:
            self.m_drag = False
            self.setCursor(QCursor(Qt.ArrowCursor))

    def mouseMoveEvent(self, e):
        if Qt.LeftButton and self.m_drag:
            self.move(e.globalPos() - self.m_DragPosition)
            e.accept()

    def visit(self):
        if self.windowState() == Qt.WindowNoState:
            self.left_visit.setIcon(qtawesome.icon('fa.window-restore', color='white'))
            self.setWindowState(Qt.WindowMaximized)
        else:
            self.left_visit.setIcon(qtawesome.icon('fa.window-maximize', color='white'))
            self.setWindowState(Qt.WindowNoState)
        
    def closeEvent(self, event):
        sys.exit(0)

if __name__ == '__main__':
    if getattr( sys, 'frozen', False ):
        # running in a bundle
        basedir = sys._MEIPASS
    else :
        # running live
        os.makedirs('./data', exist_ok=True)
        os.makedirs('./category', exist_ok=True)
        os.makedirs('./picture', exist_ok=True)
        os.makedirs('./word', exist_ok=True)
        os.makedirs('./prediction_model', exist_ok=True)
        os.makedirs('./report', exist_ok=True)

    app = QApplication(sys.argv)
    gui = MainUi()
    gui.show()
    sys.exit(app.exec_())
